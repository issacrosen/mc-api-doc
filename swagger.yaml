openapi: 3.0.0
info:
  version: '2.0'
  title: Messaging
  description: API to send messages
  license:
    name: MIT
servers:
  - url: 'https://api.respond.io/v2'
    description: Production
paths:
  '/contact/{identifier}/message':
    post:
      summary: Send a message
      operationId: sendMessage
      parameters:
        - $ref: '#/components/parameters/identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                channelId:
                  type: integer
                  description: |-
                    ID of the channel to send the message on.

                    `null` to send message on the **last interacted channel** (if any).
                  nullable: true
                message:
                  oneOf:
                    - $ref: '#/components/schemas/Text'
                    - $ref: '#/components/schemas/Attachment'
                    - $ref: '#/components/schemas/CustomPayload'
                    - $ref: '#/components/schemas/QuickReply'
                    - $ref: '#/components/schemas/WhatsAppTemplate'
              required:
                - message
            examples: {}
        description: ''
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  messageId:
                    type: integer
                    format: 1262965213
                    description: The id of the message so that you can track it later
                required:
                  - messageId
          description: ''
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      description: 'Sends a message to a specific contact through specific channel. If channelId is not specified, the message will be sent through last interacted channel. Note that for custom payload message type only supported for Telegram, Facebook, Viber and Line, channelId must be specified in order to send a custom payload message. Example for identifier - `id:123` | `email:abdc@gmail.com` | `phone:+60121233112`'
    parameters:
      - name: identifier
        in: path
        required: true
        schema:
          type: string
          enum:
            - 'id:1'
            - 'email:abc@gmail.com'
            - 'phone:+60121233112'
          example: 'id:1'
        description: 'Identifier of the contact that can either be a phone number, email or contact ID.'
  '/contact/{identifier}/message/{messageId}':
    get:
      summary: Get a message
      operationId: getMessage
      parameters:
        - $ref: '#/components/parameters/identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  messageId:
                    type: integer
                    example: 1262965213
                    description: Unique ID of the message
                  channelMessageId:
                    type:
                      - string
                      - integer
                    example: 123
                  contactId:
                    type: integer
                    example: 123
                    description: ID of the contact to which the message was sent.
                  channelId:
                    type: integer
                    example: 123
                  traffic:
                    type: string
                    enum:
                      - outgoing
                      - incoming
                    description: Defines if the message was received or sent
                  message:
                    oneOf:
                      - $ref: '#/components/schemas/Text'
                      - $ref: '#/components/schemas/Attachment'
                      - $ref: '#/components/schemas/WhatsAppTemplate'
                      - $ref: '#/components/schemas/QuickReply'
                      - $ref: '#/components/schemas/CustomPayload'
                  status:
                    $ref: '#/components/schemas/MessageStatus'
                required:
                  - messageId
                  - contactId
                  - channelId
                  - traffic
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
      description: Retrieves a message based on the message ID. You can get the message ID that was returned upon sending through Send a message endpoint.
    parameters:
      - $ref: '#/components/parameters/identifier'
      - $ref: '#/components/parameters/messageId'
components:
  schemas:
    Text:
      type: object
      properties:
        type:
          type: string
          enum:
            - text
        text:
          type: string
          example: Message text
        messageTag:
          type: string
          enum:
            - ACCOUNT_UPDATE
            - POST_PURCHASE_UPDATE
            - CONFIRMED_EVENT_UPDATE
          description: 'Required if the channel is `facebook` or `instagram` and the message is being sent outsde the standard 24 hour messaging window. [Reference](https://developers.facebook.com/docs/messenger-platform/reference/send-api/#parameters)'
      required:
        - type
        - text
    Attachment:
      type: object
      properties:
        type:
          type: string
          enum:
            - attachment
        attachment:
          type: object
          required:
            - type
            - url
          properties:
            type:
              type: string
              enum:
                - image
                - video
                - audio
                - file
            url:
              type: string
              example: 'http://example.com/some-file.pdf'
      required:
        - type
        - attachment
    CustomPayload:
      type: object
      properties:
        type:
          type: string
          example: custom_payload
        payload:
          type: object
          format: {}
          description: Refer to the channel documentation for the payload.
      required:
        - type
        - payload
    QuickReply:
      type: object
      properties:
        type:
          type: string
          example: quick_reply
        title:
          type: string
          example: Quick reply title
        replies:
          type: array
          uniqueItems: true
          items:
            type: string
            example: How are you?
      required:
        - type
        - title
        - replies
    WhatsAppTemplate:
      type: object
      properties:
        type:
          type: string
          example: whatsapp_template
        template:
          type: object
          required:
            - name
            - languageCode
          properties:
            name:
              type: string
              example: New Update
            languageCode:
              type: string
              example: en
              description: '[Follows ISO 639-1 standard](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes)'
            components:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/MTMHeader'
                  - $ref: '#/components/schemas/MTMFooter'
                  - $ref: '#/components/schemas/MTMButton'
                  - $ref: '#/components/schemas/MTMBody'
      required:
        - type
        - template
    MTMHeader:
      type: object
      anyOf:
        - $ref: '#/components/schemas/MTMHeaderText'
        - $ref: '#/components/schemas/MTMHeaderImage'
        - $ref: '#/components/schemas/MTMHeaderVideo'
        - $ref: '#/components/schemas/MTMHeaderDocument'
    MTMHeaderText:
      type: object
      properties:
        type:
          type: string
          enum:
            - header
          example: header
        format:
          type: string
          enum:
            - text
          example: text
        text:
          type: string
          example: Header text
        parameters:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: text
              text:
                type: string
                example: respond.io
            required:
              - type
              - text
      required:
        - type
        - text
        - parameters
    MTMHeaderImage:
      type: object
      properties:
        type:
          type: string
          enum:
            - header
          example: header
        format:
          type: string
          enum:
            - image
          example: image
        parameters:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: image
                enum:
                  - image
              image:
                type: object
                required:
                  - link
                  - caption
                  - filename
                properties:
                  link:
                    type: string
                    example: 'https://picsum.photos'
                  caption:
                    type: string
                    example: image caption
                  filename:
                    type: string
                    example: image_1024x768.png
            required:
              - type
              - image
      required:
        - parameters
    MTMHeaderVideo:
      type: object
      properties:
        type:
          type: string
          enum:
            - header
          example: header
        format:
          type: string
          enum:
            - video
          example: video
        parameters:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                format: video
                example: video
                enum:
                  - video
              video:
                type: object
                required:
                  - link
                  - caption
                  - filename
                properties:
                  link:
                    type: string
                    example: 'https://cdn.chatapi.net'
                  caption:
                    type: string
                    example: video caption
                  filename:
                    type: string
                    example: video.mp4
            required:
              - type
              - video
      required:
        - parameters
    MTMHeaderDocument:
      type: object
      properties:
        type:
          type: string
          enum:
            - header
          example: header
        format:
          type: string
          enum:
            - document
          example: document
        parameters:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum:
                  - document
                example: document
              document:
                type: object
                required:
                  - link
                  - caption
                  - filename
                properties:
                  link:
                    type: string
                    format: url
                    example: 'https://cdn.chatapi.net'
                  caption:
                    type: string
                    example: document caption
                  filename:
                    type: string
                    example: document.pdf
            required:
              - type
              - document
      required:
        - parameters
    MTMBody:
      type: object
      properties:
        type:
          type: string
          example: body
          enum:
            - body
        text:
          type: string
          example: "Good news! \U0001F600 We have fixed the bug that you reported, Please run some tests and let us know how it worked."
        parameters:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: text
                enum:
                  - text
              text:
                type: string
                example: Parameter 1
    MTMFooter:
      type: object
      properties:
        type:
          type: string
          example: footer
          enum:
            - footer
        text:
          type: string
          example: This is a footer text
    MTMButton:
      type: object
      properties:
        type:
          type: string
          example: buttons
          enum:
            - buttons
        buttons:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/MTMButtonQuickReply'
              - $ref: '#/components/schemas/MTMButtonPhoneNumber'
              - $ref: '#/components/schemas/MTMButtonURL'
    MTMButtonQuickReply:
      type: object
      properties:
        type:
          type: string
          enum:
            - quick_reply
          example: quick_reply
        text:
          type: string
          example: 'No'
    MTMButtonPhoneNumber:
      type: object
      properties:
        type:
          type: string
          example: phone_number
          enum:
            - phone_number
        text:
          type: string
          example: Customer Care
        phone_number:
          type: string
          example: '+60376268899'
    MTMButtonURL:
      type: object
      properties:
        type:
          type: string
          example: url
        text:
          type: string
          example: Track Your Parcel
        url:
          type: string
          example: 'https://www.trackparcel.com/'
        parameters:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: text
                enum:
                  - text
              text:
                type: string
                example: button_parameter_text
    MessageStatus:
      title: MessageStatus
      anyOf:
        - items:
            type: object
            properties:
              value:
                type: string
                enum:
                  - pending
                  - sent
                  - delivered
                  - read
                  - failed
              timestamp:
                type: integer
                example: 1662965213
                description: Unix timestamp in seconds
              message:
                type: string
                example: Failed reason
                description: Reason of the failure.
            required:
              - value
              - timestamp
      description: The delivery statuses of the message
      type: array
  parameters:
    identifier:
      name: identifier
      in: path
      required: true
      schema:
        type: string
      description: 'Identifier of the contact that can either be a phone number, email or contact ID. Examples: ``id:123`` , ``email:abdc@gmail.com`` , ``phone:+60121233112``'
    messageId:
      name: messageId
      in: path
      required: true
      schema:
        type: integer
      description: '1662965880'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  responses:
    '400':
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 400
              message:
                type: string
                example: Validation error.
    '401':
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 401
              message:
                type: string
                example: UN_AUTHORIZED
    '404':
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 404
              message:
                type: string
                example: Contact not found
    '429':
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 429
              message:
                type: string
                example: Too Many Requests
      headers:
        Retry-After:
          schema:
            type: number
            example: 1
          description: Number of seconds until you can retry the request
        X-RateLimit-Limit:
          schema:
            type: number
            example: 10
          description: Number of request allowed for this end point
        X-RateLimit-Remaining:
          schema:
            type: number
            example: 5
          description: Number of request remaining for this end point
    '500':
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 500
              message:
                type: string
                example: Unexpected error occurred
    Get-a-message:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              messageId:
                type: integer
              channelMessageId:
                type:
                  - string
                  - integer
              contactId:
                type: integer
              channelId:
                type: integer
              traffic:
                type: string
                enum:
                  - outgoing
                  - incoming
              message:
                oneOf:
                  - $ref: '#/components/schemas/Text'
                  - $ref: '#/components/schemas/Attachment'
                  - $ref: '#/components/schemas/WhatsAppTemplate'
                  - $ref: '#/components/schemas/QuickReply'
                  - $ref: '#/components/schemas/CustomPayload'
              status:
                $ref: '#/components/schemas/MessageStatus'
            required:
              - messageId
              - contactId
              - channelId
              - traffic
security:
  - BearerAuth: []
